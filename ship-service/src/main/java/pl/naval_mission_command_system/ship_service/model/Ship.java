package pl.naval_mission_command_system.ship_service.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.*;

/**
 * Represents a naval ship within the mission command system.
 * <p>
 *  * Each {@code Ship} has a unique identifier, a name, an assigned captain,
 *  * an associated mission ID, and a current mission status.
 * </p>
 *
 * <p><strong>Persistence:</strong></p>
 * <ul>
 *   <li>Mapped to the {@code Ship} table in the database</li>
 *   <li>ID is auto-generated using {@code GenerationType.IDENTITY}</li>
 *   <li>{@code missionStatus} is stored as a string enum</li>
 * </ul>
 *
 * <p><strong>Validation:</strong></p>
 * <ul>
 *   <li>{@code shipName} and {@code captainUsername} must not be blank</li>
 *   <li>{@code assignedMissionId} must not be null</li>
 * </ul>
 *
 * <p><strong>Default behavior:</strong></p>
 * <ul>
 *   <li>{@code missionStatus} defaults to {@code PENDING}</li>
 * </ul>
 *
 * This entity is used by the {@code ship-service} microservice to manage ship-related operations.
 *
 * @author Pawe≈Ç Opala
 * @see MissionStatus
 * @see ShipRepository
 */
@Entity
@Table(name = "Ship")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Ship {

    /**
     * Primary key of the ship entity
     * Auto-generated by the database
     */
    @Id
    @Column(name = "id", updatable = false, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Name of the ship.
     * Cannot be blank.
     */
    @NotBlank
    @Column(name = "ship_name")
    private String shipName;

    /**
     * Username of the captain assigned to this ship.
     * Cannot be blank.
     */
    @NotBlank
    @Column(name = "captain_username")
    private String captainUsername;

    /**
     * ID of the mission currently assigned to this ship.
     * Cannot be null.
     */
    @NotNull
    @Column(name = "assigned_mission_id")
    private Long assignedMissionId;

    /**
     * Current status of the assigned mission.
     * Stored as a string in the database.
     * Defaults to {@code PENDING}.
     */
    @Enumerated(EnumType.STRING)
    @NotNull
    @Column(name = "status", nullable = false, length = 20)
    @Builder.Default
    private MissionStatus missionStatus = MissionStatus.PENDING;

}
